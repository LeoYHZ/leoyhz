<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Java代码]]></title>
    <url>%2F2018%2F04%2F24%2FJava%E4%BB%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[学习过程中打的代码 一维数据配对（非List法debug）12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394package java_learning;import java.io.*;public class HelloWorld &#123; public static void main (String [] args) &#123; System.out.println(&quot;PS:您最多只能输入100次 并确认每次输入的为数字&quot;); int numOfGuesses=0; GameHelper helper=new GameHelper(); SimpleDotCom theDotCom=new SimpleDotCom(); int randomNum=(int) (Math.random()*5); int[] locations= &#123;randomNum,randomNum+1,randomNum+2&#125;; theDotCom.setLocationCells(locations); boolean isAlive=true; while(isAlive==true)&#123; String guess=helper.getUserInput(&quot;Enter a number on the next line please.&quot;); numOfGuesses++; String guessPro=protect.wulala(guess,numOfGuesses); String result=theDotCom.checkYourself(guessPro); if(numOfGuesses==100) &#123; System.out.println(&quot;You have used 100 opportunities.&quot;); &#125; else if(result.equals(&quot;kill&quot;)) &#123; isAlive=false; System.out.println(&quot;You took &quot;+numOfGuesses+&quot; guesses.&quot;); &#125; &#125; &#125; public static class GameHelper&#123; public String getUserInput(String prompt) &#123; String inputLine=null; System.out.println(prompt+&quot; &quot;); try &#123; BufferedReader is=new BufferedReader(new InputStreamReader(System.in)); inputLine=is.readLine(); if(inputLine.length()==0) return null; &#125;catch(IOException e) &#123; System.out.println(&quot;IOException: &quot;+e); &#125; return inputLine; &#125; &#125; public static class SimpleDotCom&#123; int[] locationCells; int numOfHits=0; public void setLocationCells(int[] locs) &#123; locationCells=locs; &#125; public String checkYourself(String stringGuess) &#123; int guess=Integer.parseInt(stringGuess); String result=&quot;miss&quot;; for(int cell:locationCells) &#123; if(guess==cell) &#123; result=&quot;hit&quot;; numOfHits++; break; &#125; else if(guess==999) &#123; result=&quot;repeat input&quot;; break; &#125; &#125; if (numOfHits==locationCells.length) &#123; result=&quot;kill&quot;; &#125; System.out.println(result); return result; &#125; &#125; public static class protect&#123; public static int save[]= new int[100]; public static String wulala(String input,int num) &#123; String output=null; int wulala=Integer.parseInt(input); save[num]=wulala+1; if (num==1) &#123; output=input; &#125; else &#123; for(int i=1;i &lt; num;i++) &#123; if(save[i]==save[num]) &#123; output=&quot;999&quot;; break; &#125; else &#123; output=input; &#125; &#125; &#125; return output; &#125; &#125;&#125; 二维数据配对（List法debug）123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171package java_learning;import java.io.*;import java.util.*;import java.util.ArrayList;public class HelloWorld &#123; private GameHelper helper=new GameHelper(); private ArrayList&lt;DotCom&gt; dotComsList=new ArrayList&lt;DotCom&gt;(); private int numOfGuesses=0; public static void main (String [] args) &#123; HelloWorld game=new HelloWorld(); game.setUpGame(); game.startPlaying(); &#125; private void setUpGame() &#123; DotCom one=new DotCom(); one.setName(&quot;Pets.com&quot;); DotCom two=new DotCom(); two.setName(&quot;eToys.com&quot;); DotCom three=new DotCom(); three.setName(&quot;Go2.com&quot;); dotComsList.add(one); dotComsList.add(two); dotComsList.add(three); System.out.println(&quot;Your goal is to sink three dot coms.&quot;); System.out.println(&quot;Pet.com, eToys.com, Go2.com&quot;); System.out.println(&quot;Try to sink them all in the fewest number of guess.&quot;); for(DotCom dotComToSet:dotComsList) &#123; ArrayList&lt;String&gt; newLocation=helper.placeDotCom(3); dotComToSet.setLocationCells(newLocation); &#125; &#125; private void startPlaying() &#123; while(!dotComsList.isEmpty()) &#123; String userGuess=helper.getUserInput(&quot;Enter a guess please&quot;); checkUserGuess(userGuess); &#125; finishGame(); &#125; private void checkUserGuess(String userGuess) &#123; numOfGuesses++; String result = &quot;miss&quot;; for(DotCom dotComToTest:dotComsList) &#123; result=dotComToTest.checkYourself(userGuess); if(result.equals(&quot;hit&quot;)) &#123; break; &#125; if(result.equals(&quot;kill&quot;)) &#123; dotComsList.remove(dotComToTest); break; &#125; &#125;System.out.println(result); &#125; private void finishGame() &#123; System.out.println(&quot;All Dot Coms are dead! Your stock is now worthless.&quot;); if(numOfGuesses&lt;=18) &#123; System.out.println(&quot;It only took you &quot;+numOfGuesses+&quot; guesses.&quot;); System.out.println(&quot;You got out before your options sank.&quot;); &#125;else &#123; System.out.println(&quot;Took you long enough. &quot;+numOfGuesses+&quot;guesses.&quot;); System.out.println(&quot;Fish are dancing with your options.&quot;); &#125; &#125; public class DotCom&#123; private ArrayList&lt;String&gt; locationCells; private String name; public void setLocationCells(ArrayList&lt;String&gt; loc) &#123; locationCells=loc; &#125; public void setName(String n) &#123; name=n; &#125; public String checkYourself(String userInput) &#123; String result=&quot;miss&quot;; int index=locationCells.indexOf(userInput); if (index&gt;=0) &#123; locationCells.remove(index); if(locationCells.isEmpty()) &#123; result=&quot;kill&quot;; &#125;else &#123; result=&quot;hit&quot;; &#125; &#125;return result; &#125; &#125; public static class GameHelper&#123; private static final String alphabet =&quot;abcdefg&quot;; private int gridLength=7; private int gridSize=49; private int [] grid=new int[gridSize]; private int comCount=0; public String getUserInput(String prompt) &#123; String inputLine=null; System.out.println(prompt+&quot; &quot;); try &#123; BufferedReader is = new BufferedReader (new InputStreamReader(System.in)); inputLine=is.readLine(); if (inputLine.length()==0) return null; &#125; catch (IOException e) &#123; System.out.println(&quot;IOException: &quot;+e); &#125; return inputLine.toLowerCase(); &#125; public ArrayList&lt;String&gt; placeDotCom(int comSize)&#123; ArrayList&lt;String&gt; alphaCells=new ArrayList&lt;String&gt;(); String [] alphacoords=new String [comSize]; String temp=null; int[]coords=new int[comSize]; int attempts=0; boolean success = false; int location=0; comCount++; int incr=1; if((comSize%2)==1) &#123; incr=gridLength; &#125; while(!success &amp; attempts++ &lt; 200) &#123; location=(int) (Math.random()*gridSize); System.out.print(&quot; try &quot;+location);//作弊码 int x=0; success=true; while(success&amp;&amp;x&lt;comSize) &#123; if(grid[location]==0) &#123; coords[x++]=location; location += incr; if(location&gt;=gridSize) &#123; success=false; &#125; if(x&gt;0 &amp;&amp; (location % gridLength ==0)) &#123; success=false; &#125; &#125; else &#123; System.out.print(&quot; used &quot;+location);//作弊码 success=false; &#125; &#125; &#125; int x=0; int row=0; int column=0; System.out.println(&quot;\n&quot;);//作弊码 while(x&lt;comSize) &#123; grid[coords[x]]=1; row=(int) (coords[x]/gridLength); column=coords[x]%gridLength; temp=String.valueOf(alphabet.charAt(column)); alphaCells.add(temp.concat(Integer.toString(row))); x++; System.out.print(&quot; coord &quot; +x+ &quot;= &quot; +alphaCells.get(x-1));//作弊码 &#125; System.out.println(&quot;\n&quot;);//作弊码 return alphaCells; &#125; &#125;&#125; P161习题123456789101112131415161718192021222324252627282930313233343536373839package java_learning;import java.io.*;import java.util.*;public class HelloWorld &#123; public static void main (String[] args) &#123; ArrayList&lt;String&gt; a=new ArrayList&lt;String&gt;(); a.add(0,&quot;zero&quot;); a.add(1,&quot;one&quot;); a.add(2,&quot;two&quot;); a.add(3,&quot;three&quot;); printAL(a); a.remove(2); if (a.contains(&quot;two&quot;)) &#123; a.add(&quot;2.2&quot;); &#125; if (a.contains(&quot;three&quot;)) &#123; a.add(&quot;four&quot;); &#125; printAL(a); if(a.indexOf(&quot;four&quot;) != 4) &#123; a.add(4,&quot;4.2&quot;); &#125; printAL(a); printAL(a); &#125; public static void printAL(ArrayList&lt;String&gt; al) &#123; for (String element : al) &#123; System.out.print(element + &quot; &quot;); &#125; System.out.println(&quot; &quot;); &#125;&#125;]]></content>
      <tags>
        <tag>Java学习记录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo command not found]]></title>
    <url>%2F2018%2F04%2F15%2Fhexo%20command%20not%20found%2F</url>
    <content type="text"><![CDATA[hexo 出现 command not found 的问题 node : command not found或则npm : command not found问题本周因为忙于JAVA的学习而忘记了我的Blog。今天打开博客进行文章的上传时，才发现出现了 node : command not found 的问题，在百度上搜索后，有人说重新安装Hexo即可，但是一试更可怕，连npm的指令都不能使用了。 于是想到是不是因为前一段时间配置java环境的原因，就在搜索时加上了java，便找到了这位博主的博客。与我经历极其相似，于是便试了一下，发现我的类似目录加到环境变量PATH路径的后面并不行。于是把每一个含有Hexo以及npm的文件夹都试了一遍，最后发现把Node.js安装目录添加到环境变量PATH路径的后面就可以了。 注意：一定是Node.js的安装目录PS：环境变量的解释环境变量是在操作系统中一个具有特定名字的对象，它包含了一个或者多个应用程序所将使用到的信息。例如Windows和DOS操作系统中的path环境变量，当要求系统运行一个程序而没有告诉它程序所在的完整路径时，系统除了在当前目录下面寻找此程序外，还应到path中指定的路径去找。用户通过设置环境变量，来更好的运行进程。环境变量一般是指在操作系统中用来指定操作系统运行环境的一些参数，比如临时文件夹位置和系统文件夹位置等。]]></content>
      <tags>
        <tag>hexo bug</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[多系统同步Hexo博客]]></title>
    <url>%2F2018%2F03%2F25%2F%E5%A4%9A%E7%B3%BB%E7%BB%9F%E5%90%8C%E6%AD%A5Hexo%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[本文章借鉴于网络各个大神的方法 多系统同步更新Hexo博客 此时将Hexo安装在Windows的系统上时候，参考这篇教程；安装到linux(以ubuntu/debian为例)上的时候，使用这一篇教程即可。 然后就是文件之间的共享了。 因为linux的内核可读写多种文件系统，如：Fat,NTFS,Vfat,Fat32以及Hfs等，因此在linux下访问Windows下的文件就比Windows下简单的多，无需专门软件，直接使用命令行就可以了，并且大多数提供图形界面的linux系统都可以直接通过内置的文件管理进行查看。找到文件夹后直接在终端选中该文件夹进行命令操作即可。 但是在Windows下面访问ext2以及reiserfs分区则相对麻烦一些。绝大多数的linux系统安装之后是不会在Windows环境下以X盘的形式显示出来的，这时我们就要借助一些软件了。比较推荐的就是 explore2fs 了，自行百度就能找到，安装运行即可。另一种方法就是使用高级资源管理器Total Commander加Ext2+Reiser 插件实现Ext2和Reiser FS分区的只读访问，安装后运行Total Command选择配置－－插件－－文件系统插件－－配置－－添加－－找到ex2fs.wfx并添加，最后“确定”添加成功即可。 上面的方法虽然可行，但是配置使用起来因人而异，但最后一种绝对简单易用。那就是把blog的文件夹拷贝到U盘中，每一次修改博客之后，将修改后的配置文件或则博文替换相应位置即可。PS：简单粗暴，换了电脑也不怕，正在使用中。 最后一种就是一劳永逸，绝对方便的了。在github中新建一个分支，把blog中所有源码实时更新。 正在学习使用，待更新]]></content>
      <tags>
        <tag>多系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[密码浏览]]></title>
    <url>%2F2018%2F03%2F24%2F%E5%AF%86%E7%A0%81%E6%B5%8F%E8%A7%88%2F</url>
    <content type="text"><![CDATA[密码测试 本文章仅仅为了测试密码系统 呜啦啦啦 看不到哦]]></content>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F03%2F20%2Fhello-world%2F</url>
    <content type="text"><![CDATA[欢迎来到Hexo！这是你的第一篇文章。点击文档获取更多信息。如果你使用Hexo时有任何问题,你可以在该网址上找到解决方案或者在GitHub上询问我。 快速启动创建一个新的帖子1$ hexo new "My New Post" 更多信息: write 运行服务器1$ hexo server 更多信息: Server 生成静态文件1$ hexo generate 更多信息: Generating 部署到远程站点1$ hexo deploy 更多信息: Deployment]]></content>
  </entry>
</search>
