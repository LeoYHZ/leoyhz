<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Test]]></title>
    <url>%2F2019%2F04%2F24%2FTest%2F</url>
    <content type="text"><![CDATA[deepin上博客第一次测试TEST]]></content>
      <tags>
        <tag>Test</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MIUI10修改状态栏时间居中]]></title>
    <url>%2F2018%2F12%2F19%2FMIUI10%E4%BF%AE%E6%94%B9%E7%8A%B6%E6%80%81%E6%A0%8F%E6%97%B6%E9%97%B4%E5%B1%85%E4%B8%AD%2F</url>
    <content type="text"><![CDATA[修改坚果Pro2的MIUI10系统上的状态栏 反编译/system/priv-app/MiuiSystemUI使用工具:MT管理器;本教程酷安地址修改时间居中需要用到MiuiSystemUI.apk/res/layout中的布局文件signal_cluster_view.xml //信号、WIFI部分status_bar.xml //状态栏总布局system_icons.xml //系统通知图标及信号显示下载时间居中，并拆包提取代码。时间:将时间居中代码放到status_bar.xml中替换到原本时间布局即可。信号:将信号居左代码放到status_bar.xml中会在状态栏左边生成信号图标，但是右侧信号并没有消失。去除右侧信号:修改status_bar.xml中的右侧通知布局，使其layout_width=”0dp”,隐藏掉即可。然后创建新布局，把system_icons.xml中布局复制进去，尝试修改其中的layout_width=”0dp”隐藏掉信号即可。]]></content>
      <tags>
        <tag>安卓UI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Deepin引导问题]]></title>
    <url>%2F2018%2F07%2F22%2FDeepin%E5%BC%95%E5%AF%BC%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[Deepin引导失败原因之一Deepin引导失败后，在开机界面显示以下文字 search.fs_uuid 63940a4a-5f46-4ac7-b196-84c6b22b8338 root hd1,gpt5set prefix=($root)’/boot/grub’configfile $prefix/grub.cfg deepin 使用的ubuntu的引导进行美化 所以会产生一个ubuntu的文件夹 不要误删 efi/boot文件夹下的.cfg文件上配置文件 其中的uuid必须对齐对应的分区才能开机（不同电脑 不同系统的uuid不相同 该文字为本机Deepin系统对应的uuid）]]></content>
      <tags>
        <tag>Linux问题记录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java笔记]]></title>
    <url>%2F2018%2F06%2F01%2FJava%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[学习Java过程中的随笔 随手记录Java程序以main来运行的话 只能有一个public class开头的类 其他的都应该用class开头 Java中的数组，变量，对象等引用的步骤：1声明 2创建 3赋值 Java对象数组的调用 Echo hi[] = new Echo[6]; hi[0] = new Echo(); hi[0].hello(); 使用的时候应当对整个对象数组创建后 再对单个的对象进行创建赋值才能使用 Java中char后加单引号’’可存放一位汉字或则一位英语字母 字符串使用String来创建 后加双引号””使用Integer.parseInt()来取得String的整数值，Integer.parseInt()只会在所给的String为数字时有作用。浮点数(浮点数数据后要加f，否则系统会识别为double型)转换为整型时使用float b=5.2f; int a=(int) b;即可。 Java中如果想要把类定义为抽象类的时候，在前面加上abstract即可。抽象的类代表此类必须被extends过，抽象的方法代表此方法一定要被覆盖过，并且一定位于抽象的类下面（抽象的方法没有实体 例:pubic abstract void eat(); ）。 抽象的方法没有内容，它只是为了标记出多态而存在的。这表示在继承树结构下的第一个具体类必须要实现所有的抽象方法。 public class 子类 extends 父类 inplements 接口 super.在子类可以调用父类中的构造方法(对其的调用必须是构造函数的第一个语句)this() 就是调用自己的无参构造方法，和super()一个道理。this就是指本对象自身。因为this和super都是第一个语句，二者只能有一个存在。 实例变量就是类中直接定义的变量，局部变量就是方法中的过程量，静态变量就是加static的变量（定义在类中，但是不在方法中，位置类似实例变量）调用静态的方法要使用类的名称 调用非静态的方法要使用引用变量的名称 静态的final的变量的初始化(final一定要初始化)：1234567891：public class Foo&#123; public static final int FOO_X=25; &#125;2: public class Bar&#123; public static final double BAR_SIGN; static&#123; BAR_SIGN=(double) Math.random(); &#125; &#125; “&lt;”这个符号是个特殊的指示，告诉格式化程序重复之前用过的参数，例：String.format(“%tA %tB %td”,today,today,today);等于String.format(“%tA %&lt;tB %&lt;td”,today);]]></content>
      <tags>
        <tag>Java学习记录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java代码]]></title>
    <url>%2F2018%2F05%2F19%2FJava%E4%BB%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[学习过程中打的代码 一维数据配对（非List法debug）12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394package java_learning;import java.io.*;public class HelloWorld &#123; public static void main (String [] args) &#123; System.out.println(&quot;PS:您最多只能输入100次 并确认每次输入的为数字&quot;); int numOfGuesses=0; GameHelper helper=new GameHelper(); SimpleDotCom theDotCom=new SimpleDotCom(); int randomNum=(int) (Math.random()*5); int[] locations= &#123;randomNum,randomNum+1,randomNum+2&#125;; theDotCom.setLocationCells(locations); boolean isAlive=true; while(isAlive==true)&#123; String guess=helper.getUserInput(&quot;Enter a number on the next line please.&quot;); numOfGuesses++; String guessPro=protect.wulala(guess,numOfGuesses); String result=theDotCom.checkYourself(guessPro); if(numOfGuesses==100) &#123; System.out.println(&quot;You have used 100 opportunities.&quot;); &#125; else if(result.equals(&quot;kill&quot;)) &#123; isAlive=false; System.out.println(&quot;You took &quot;+numOfGuesses+&quot; guesses.&quot;); &#125; &#125; &#125; public static class GameHelper&#123; public String getUserInput(String prompt) &#123; String inputLine=null; System.out.println(prompt+&quot; &quot;); try &#123; BufferedReader is=new BufferedReader(new InputStreamReader(System.in)); inputLine=is.readLine(); if(inputLine.length()==0) return null; &#125;catch(IOException e) &#123; System.out.println(&quot;IOException: &quot;+e); &#125; return inputLine; &#125; &#125; public static class SimpleDotCom&#123; int[] locationCells; int numOfHits=0; public void setLocationCells(int[] locs) &#123; locationCells=locs; &#125; public String checkYourself(String stringGuess) &#123; int guess=Integer.parseInt(stringGuess); String result=&quot;miss&quot;; for(int cell:locationCells) &#123; if(guess==cell) &#123; result=&quot;hit&quot;; numOfHits++; break; &#125; else if(guess==999) &#123; result=&quot;repeat input&quot;; break; &#125; &#125; if (numOfHits==locationCells.length) &#123; result=&quot;kill&quot;; &#125; System.out.println(result); return result; &#125; &#125; public static class protect&#123; public static int save[]= new int[100]; public static String wulala(String input,int num) &#123; String output=null; int wulala=Integer.parseInt(input); save[num]=wulala+1; if (num==1) &#123; output=input; &#125; else &#123; for(int i=1;i &lt; num;i++) &#123; if(save[i]==save[num]) &#123; output=&quot;999&quot;; break; &#125; else &#123; output=input; &#125; &#125; &#125; return output; &#125; &#125;&#125; 二维数据配对（List法debug）123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171package java_learning;import java.io.*;import java.util.*;import java.util.ArrayList;public class HelloWorld &#123; private GameHelper helper=new GameHelper(); private ArrayList&lt;DotCom&gt; dotComsList=new ArrayList&lt;DotCom&gt;(); private int numOfGuesses=0; public static void main (String [] args) &#123; HelloWorld game=new HelloWorld(); game.setUpGame(); game.startPlaying(); &#125; private void setUpGame() &#123; DotCom one=new DotCom(); one.setName(&quot;Pets.com&quot;); DotCom two=new DotCom(); two.setName(&quot;eToys.com&quot;); DotCom three=new DotCom(); three.setName(&quot;Go2.com&quot;); dotComsList.add(one); dotComsList.add(two); dotComsList.add(three); System.out.println(&quot;Your goal is to sink three dot coms.&quot;); System.out.println(&quot;Pet.com, eToys.com, Go2.com&quot;); System.out.println(&quot;Try to sink them all in the fewest number of guess.&quot;); for(DotCom dotComToSet:dotComsList) &#123; ArrayList&lt;String&gt; newLocation=helper.placeDotCom(3); dotComToSet.setLocationCells(newLocation); &#125; &#125; private void startPlaying() &#123; while(!dotComsList.isEmpty()) &#123; String userGuess=helper.getUserInput(&quot;Enter a guess please&quot;); checkUserGuess(userGuess); &#125; finishGame(); &#125; private void checkUserGuess(String userGuess) &#123; numOfGuesses++; String result = &quot;miss&quot;; for(DotCom dotComToTest:dotComsList) &#123; result=dotComToTest.checkYourself(userGuess); if(result.equals(&quot;hit&quot;)) &#123; break; &#125; if(result.equals(&quot;kill&quot;)) &#123; dotComsList.remove(dotComToTest); break; &#125; &#125;System.out.println(result); &#125; private void finishGame() &#123; System.out.println(&quot;All Dot Coms are dead! Your stock is now worthless.&quot;); if(numOfGuesses&lt;=18) &#123; System.out.println(&quot;It only took you &quot;+numOfGuesses+&quot; guesses.&quot;); System.out.println(&quot;You got out before your options sank.&quot;); &#125;else &#123; System.out.println(&quot;Took you long enough. &quot;+numOfGuesses+&quot;guesses.&quot;); System.out.println(&quot;Fish are dancing with your options.&quot;); &#125; &#125; public class DotCom&#123; private ArrayList&lt;String&gt; locationCells; private String name; public void setLocationCells(ArrayList&lt;String&gt; loc) &#123; locationCells=loc; &#125; public void setName(String n) &#123; name=n; &#125; public String checkYourself(String userInput) &#123; String result=&quot;miss&quot;; int index=locationCells.indexOf(userInput); if (index&gt;=0) &#123; locationCells.remove(index); if(locationCells.isEmpty()) &#123; result=&quot;kill&quot;; &#125;else &#123; result=&quot;hit&quot;; &#125; &#125;return result; &#125; &#125; public static class GameHelper&#123; private static final String alphabet =&quot;abcdefg&quot;; private int gridLength=7; private int gridSize=49; private int [] grid=new int[gridSize]; private int comCount=0; public String getUserInput(String prompt) &#123; String inputLine=null; System.out.println(prompt+&quot; &quot;); try &#123; BufferedReader is = new BufferedReader (new InputStreamReader(System.in)); inputLine=is.readLine(); if (inputLine.length()==0) return null; &#125; catch (IOException e) &#123; System.out.println(&quot;IOException: &quot;+e); &#125; return inputLine.toLowerCase(); &#125; public ArrayList&lt;String&gt; placeDotCom(int comSize)&#123; ArrayList&lt;String&gt; alphaCells=new ArrayList&lt;String&gt;(); String [] alphacoords=new String [comSize]; String temp=null; int[]coords=new int[comSize]; int attempts=0; boolean success = false; int location=0; comCount++; int incr=1; if((comSize%2)==1) &#123; incr=gridLength; &#125; while(!success &amp; attempts++ &lt; 200) &#123; location=(int) (Math.random()*gridSize); System.out.print(&quot; try &quot;+location);//作弊码 int x=0; success=true; while(success&amp;&amp;x&lt;comSize) &#123; if(grid[location]==0) &#123; coords[x++]=location; location += incr; if(location&gt;=gridSize) &#123; success=false; &#125; if(x&gt;0 &amp;&amp; (location % gridLength ==0)) &#123; success=false; &#125; &#125; else &#123; System.out.print(&quot; used &quot;+location);//作弊码 success=false; &#125; &#125; &#125; int x=0; int row=0; int column=0; System.out.println(&quot;\n&quot;);//作弊码 while(x&lt;comSize) &#123; grid[coords[x]]=1; row=(int) (coords[x]/gridLength); column=coords[x]%gridLength; temp=String.valueOf(alphabet.charAt(column)); alphaCells.add(temp.concat(Integer.toString(row))); x++; System.out.print(&quot; coord &quot; +x+ &quot;= &quot; +alphaCells.get(x-1));//作弊码 &#125; System.out.println(&quot;\n&quot;);//作弊码 return alphaCells; &#125; &#125;&#125; P161习题(Head First Java)123456789101112131415161718192021222324252627282930313233343536373839package java_learning;import java.io.*;import java.util.*;public class HelloWorld &#123; public static void main (String[] args) &#123; ArrayList&lt;String&gt; a=new ArrayList&lt;String&gt;(); a.add(0,&quot;zero&quot;); a.add(1,&quot;one&quot;); a.add(2,&quot;two&quot;); a.add(3,&quot;three&quot;); printAL(a); a.remove(2); if (a.contains(&quot;two&quot;)) &#123; a.add(&quot;2.2&quot;); &#125; if (a.contains(&quot;three&quot;)) &#123; a.add(&quot;four&quot;); &#125; printAL(a); if(a.indexOf(&quot;four&quot;) != 4) &#123; a.add(4,&quot;4.2&quot;); &#125; printAL(a); printAL(a); &#125; public static void printAL(ArrayList&lt;String&gt; al) &#123; for (String element : al) &#123; System.out.print(element + &quot; &quot;); &#125; System.out.println(&quot; &quot;); &#125;&#125; P194习题(Head First Java)1234567891011121314151617181920212223242526272829303132333435363738394041package java_learning;import java.io.*;import java.util.*;public class HelloWorld &#123; public static void main (String[] args) &#123; Boat b1=new Boat(); Sailboat b2=new Sailboat (); Rowboat b3 =new Rowboat(); b2.setLength(32); b1.move(); b3.move(); b2.move(); &#125;&#125; class Sailboat extends Boat&#123; public void move() &#123; System.out.print(&quot;hoist sail &quot;); &#125;&#125; class Rowboat extends Boat &#123; public void rowTheBoat() &#123; System.out.print(&quot;stroke natasha&quot;); &#125;&#125; class Boat&#123; private int length; public void setLength (int len) &#123; length=len; &#125; public int getLength() &#123; return length; &#125; public void move() &#123; System.out.print(&quot;drift &quot;); &#125;&#125; Java作业123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100//Pi的计算package java_learning;public class HelloWorld &#123; public static void main (String[] args) &#123; int a=0; int i=0; java.util.Random randX = new java.util.Random(System.currentTimeMillis()); for (i=0; i&lt;10000000; i++) &#123; double x = randX.nextDouble(); double y = randX.nextDouble(); double z=x*x + y*y; if (z&lt;1) a++; &#125; double j=a; double k=i; double Pi=4*j/k; System.out.print(Pi); &#125;&#125;//二位数组的矩阵乘法package java_learning;public class HelloWorld &#123; public static void main (String[] args) &#123; double[][] m1 = &#123; &#123;1,2,3,4&#125;, &#123;5,6,7,8&#125;, &#123;0,3,1,2&#125; &#125;; double[][] m2 = &#123; &#123;1,2,3,5,4&#125;, &#123;5,6,8,7,8&#125;, &#123;0,3,6,45,8&#125;, &#123;23,5,4,5,1&#125; &#125;; double[][] result =matrixMultiplier(m1,m2); for(int i = 0; i &lt; result.length; i++) &#123; for(int j = 0; j &lt; result[i].length; j++) &#123; int a=i+1,b=j+1; System.out.print(a+&quot;行&quot;+b+&quot;列:&quot;+result[i][j]+&quot; &quot;); &#125; System.out.println(&quot;&quot;); &#125; &#125; public static double [] [] matrixMultiplier(double[][] m1,double[][] m2) &#123; int flag1=judge(m1); int flag2=judge(m2); if(flag1==-1) return new double[0][0]; if(flag2==-1) return new double[0][0]; if(flag1!=m2.length) return new double[0][0]; else &#123; double [][] result=new double[m1.length][m2[0].length]; for (int i=0;i&lt;m1.length;i++) &#123; for(int j=0;j&lt;m2[0].length;j++) &#123; for(int k=0;k&lt;m1[0].length;k++) &#123; result[i][j]=m1[i][k]*m2[k][j]; &#125; &#125; &#125; return result; &#125; &#125; public static int judge(double[][] m0) &#123; int flag=0; int[] a=null; a=new int[100]; for (int i=0; i&lt;m0.length; i++) &#123; double[] line = m0[i]; a[i] =line.length; if (i&gt;=1 &amp;&amp; a[i-1]!=a[i]) flag=1; &#125; if(flag==1) return -1; else return a[0]; &#125;&#125; P232习题(Head First Java)123456789101112131415161718192021222324252627282930313233package java_learning;import java.util.*;interface Nose&#123; public int iMethod();&#125; abstract class Picasso implements Nose&#123; public int iMethod() &#123; return 7; &#125;&#125; class Clowns extends Picasso&#123;&#125;class Acts implements Nose&#123; public int iMethod() &#123; return 5; &#125;&#125;public class HelloWorld extends Clowns&#123; public static void main (String[] args) &#123; Nose[] i=new Nose[3]; i[0]=new Acts(); i[1]=new Clowns(); i[2]=new HelloWorld(); for(int x=0;x&lt;3;x++) &#123; System.out.println(i[x].iMethod()+ &quot; &quot; +i[x].getClass()); &#125; &#125; &#125;]]></content>
      <tags>
        <tag>Java学习记录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F04%2F26%2Fhello-world%2F</url>
    <content type="text"><![CDATA[欢迎来到Hexo！这是你的第一篇文章。点击文档获取更多信息。如果你使用Hexo时有任何问题,你可以在该网址上找到解决方案或者在GitHub上询问我。 快速启动创建一个新的帖子1$ hexo new "My New Post" 更多信息: write 运行服务器1$ hexo server 更多信息: Server 生成静态文件1$ hexo generate 更多信息: Generating 部署到远程站点1$ hexo deploy 更多信息: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[hexo command not found]]></title>
    <url>%2F2018%2F04%2F26%2Fhexo%20command%20not%20found%2F</url>
    <content type="text"><![CDATA[hexo 出现 command not found 的问题 node : command not found或则npm : command not found问题本周因为忙于JAVA的学习而忘记了我的Blog。今天打开博客进行文章的上传时，才发现出现了 node : command not found 的问题，在百度上搜索后，有人说重新安装Hexo即可，但是一试更可怕，连npm的指令都不能使用了。 于是想到是不是因为前一段时间配置java环境的原因，就在搜索时加上了java，便找到了这位博主的博客。与我经历极其相似，于是便试了一下，发现我的类似目录加到环境变量PATH路径的后面并不行。于是把每一个含有Hexo以及npm的文件夹都试了一遍，最后发现把Node.js安装目录添加到环境变量PATH路径的后面就可以了。 注意：一定是Node.js的安装目录PS：环境变量的解释环境变量是在操作系统中一个具有特定名字的对象，它包含了一个或者多个应用程序所将使用到的信息。例如Windows和DOS操作系统中的path环境变量，当要求系统运行一个程序而没有告诉它程序所在的完整路径时，系统除了在当前目录下面寻找此程序外，还应到path中指定的路径去找。用户通过设置环境变量，来更好的运行进程。环境变量一般是指在操作系统中用来指定操作系统运行环境的一些参数，比如临时文件夹位置和系统文件夹位置等。]]></content>
      <tags>
        <tag>hexo bug</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[多系统同步Hexo博客]]></title>
    <url>%2F2018%2F04%2F14%2F%E5%A4%9A%E7%B3%BB%E7%BB%9F%E5%90%8C%E6%AD%A5Hexo%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[本文章借鉴于网络各个大神的方法 多系统同步更新Hexo博客 此时将Hexo安装在Windows的系统上时候，参考这篇教程；安装到linux(以ubuntu/debian为例)上的时候，使用这一篇教程即可。 然后就是文件之间的共享了。 因为linux的内核可读写多种文件系统，如：Fat,NTFS,Vfat,Fat32以及Hfs等，因此在linux下访问Windows下的文件就比Windows下简单的多，无需专门软件，直接使用命令行就可以了，并且大多数提供图形界面的linux系统都可以直接通过内置的文件管理进行查看。找到文件夹后直接在终端选中该文件夹进行命令操作即可。 但是在Windows下面访问ext2以及reiserfs分区则相对麻烦一些。绝大多数的linux系统安装之后是不会在Windows环境下以X盘的形式显示出来的，这时我们就要借助一些软件了。比较推荐的就是 explore2fs 了，自行百度就能找到，安装运行即可。另一种方法就是使用高级资源管理器Total Commander加Ext2+Reiser 插件实现Ext2和Reiser FS分区的只读访问，安装后运行Total Command选择配置－－插件－－文件系统插件－－配置－－添加－－找到ex2fs.wfx并添加，最后“确定”添加成功即可。 上面的方法虽然可行，但是配置使用起来因人而异，但最后一种绝对简单易用。那就是把blog的文件夹拷贝到U盘中，每一次修改博客之后，将修改后的配置文件或则博文替换相应位置即可。PS：简单粗暴，换了电脑也不怕，正在使用中。 最后一种就是一劳永逸，绝对方便的了。在github中新建一个分支，把blog中所有源码实时更新。 正在学习使用，待更新]]></content>
      <tags>
        <tag>多系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[密码浏览]]></title>
    <url>%2F2018%2F03%2F24%2F%E5%AF%86%E7%A0%81%E6%B5%8F%E8%A7%88%2F</url>
    <content type="text"><![CDATA[密码测试 本文章仅仅为了测试密码系统 呜啦啦啦 看不到哦]]></content>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
</search>
